<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="friend">
	 <resultMap type="com.kh.with.main.model.vo.MailVo" id="FriendListResultSet">
		<!--  <id property="userNo" column="USER_NO" /> -->
		<id property="friId" column="FRI_ID" />
		<result property="userId" column="USER_ID" /> 
		<result property="nickname" column="NICKNAME" />
		<result property="status_yn" column="STATUS_YN" />
		<result property="fileNm" column="FILE_NM" />
	</resultMap>
	
	<resultMap type="com.kh.with.main.model.vo.Friend" id="FriendResultSet">
		<result property="userId" column="USER_ID" /> 
		<result property="friId" column="FRI_ID" />
		<result property="status_yn" column="STATUS_YN" />
		<result property="fileNm" column="FILE_NM" />
	</resultMap>
	
	
	
	
	<resultMap type="com.kh.with.member.model.vo.Member"
		id="memberResultSet">

		<id property="userNo" column="USER_NO" />
		<result property="userNm" column="USER_NM" />
		<result property="userId" column="USER_ID" />
		<result property="userPwd" column="USER_PWD" />
		<result property="nickname" column="NICKNAME" />
		<result property="phone" column="PHONE" />
		<result property="gender" column="GENDER" />
		<result property="adultYN" column="ADULT_YN" />
		<result property="chYN" column="CH_YN" />
		<result property="enrollDT" column="ENROLL_DT" />
		<result property="leaveDT" column="LEAVE_DT" />
		<result property="remainPT" column="REMAIN_PT" />
		<result property="status" column="STATUS" />
		<result property="fileNm" column="FILE_NM" />
	</resultMap>
	
	<select id="FriendList" resultMap="FriendListResultSet" parameterType="com.kh.with.main.model.vo.MailVo">
	
		 <!--  SELECT DISTINCT FRI_ID FROM FRIEND F
 			WHERE USER_ID=#{userId}
 			AND F.FRI_ID IN(
 		    SELECT DISTINCT USER_ID FROM FRIEND WHERE 
 			FRI_ID=#{userId} AND STATUS_YN='Y') -->
 		<!-- 	SELECT DISTINCT FRI_ID,NICKNAME,FILE_NM FROM FRIEND F
 			JOIN MEMBER M ON(M.USER_ID =F.FRI_ID)
             JOIN ATTACHMENT A 
            ON(M.USER_NO=A.USER_NO)
            WHERE F.USER_ID=#{userId} 
             AND STATUS_YN='Y'
           AND AM_TY='회원' -->
           
           SELECT DISTINCT FRI_ID,NICKNAME,FILE_NM FROM FRIEND F
			JOIN MEMBER M ON(M.USER_ID =F.FRI_ID)
             JOIN ATTACHMENT A 
            ON(M.USER_NO=A.USER_NO)
 			WHERE F.USER_ID=#{userId} 
 			AND F.FRI_ID IN(
 		    SELECT DISTINCT USER_ID FROM FRIEND WHERE 
 			FRI_ID=#{userId}  AND STATUS_YN='Y')  AND AM_TY='회원'
           
           
           
           
	</select>
	 
	 <select id="user" resultMap="memberResultSet" parameterType="com.kh.with.member.model.vo.Member">
	
		SELECT * FROM MEMBER
		WHERE USER_ID=#{userId}
	
	</select>
	 
	 
	<update id="frireject" parameterType="Map">
  UPDATE FRIEND SET STATUS_YN ='N' WHERE USER_ID=#{userId} AND FRI_ID=   #{friId} 
 </update>
 
	<insert id="friendSending1" parameterType="Friend">
	INSERT INTO FRIEND VALUES (#{friId},#{userId},'N')</insert>
	
<insert id="friendSending2" parameterType="Friend">
	INSERT INTO FRIEND VALUES (#{userId},#{friId},'Y')</insert> 
	 
<select id="friendconfirm" parameterType="MailVo" resultMap="FriendListResultSet">
 <!-- SELECT DISTINCT FRI_ID FROM FRIEND F
 			WHERE USER_ID=#{userId}
 			AND F.FRI_ID IN(
 		    SELECT DISTINCT USER_ID FROM FRIEND WHERE 
 			FRI_ID=#{userId} AND STATUS_YN='Y')	 -->
 			
 		SELECT DISTINCT FRI_ID,NICKNAME,FILE_NM FROM FRIEND F
 			JOIN MEMBER M ON(M.USER_ID =F.FRI_ID)
            JOIN ATTACHMENT A 
            ON(M.USER_NO=A.USER_NO)
            WHERE FRI_ID NOT in
            (SELECT FRI_ID FROM FRIEND
            WHERE STATUS_YN='Y' OR STATUS_YN='N')
          AND  F.USER_ID=#{userId} 
          AND AM_TY='회원'
	
	</select> 
<update id="frirequests" parameterType="MailVo">
  UPDATE FRIEND SET STATUS_YN ='Y' WHERE USER_ID=#{friId}  AND FRI_ID= #{userId}  
 </update>
 <update id="frirequests1" parameterType="MailVo">
  UPDATE FRIEND SET STATUS_YN ='Y' WHERE USER_ID=#{userId}  AND FRI_ID= #{friId}  
 </update>
 
 
 
  <update id="frirequestf" parameterType="MailVo">
  UPDATE FRIEND SET STATUS_YN ='N' WHERE USER_ID=#{friId}  AND FRI_ID= #{userId}  
 </update>
	 
	 
	 

</mapper>